version: '3'

vars:
  PACKAGES:
    sh: find python -name "config.yaml" -exec bash -c 'basename $(dirname "{}")' \; | tr '\n' ' '

tasks:
  3rdparty:python:update:
    desc: Update lockfile for third party Python dependencies
    cmds:
      - pants generate-lockfiles

  3rdparty:python:venv:
    desc: Create a virtual environment for third party Python dependencies
    cmds:
      - pants export

  state:
    desc: Generate the state file
    cmds:
      - pants run python/generate_state.py -- {{.ARGS}}
    vars:
      ARGS: "{{default .PACKAGES .CLI_ARGS}}"

  releases:
    desc: Generate the releases
    cmds:
      - pants run python/generate_releases.py -- {{.ARGS}}
    vars:
      ARGS: "{{default .PACKAGES .CLI_ARGS}}"

  requirements:
    desc: Generate the requirements
    cmds:
      - pants run python/generate_requirements.py -- {{.ARGS}}
    vars:
      ARGS: "{{default .PACKAGES .CLI_ARGS}}"

  build:
    desc: Build the PEX
    cmds:
      - pants run python/generate_pex.py -- {{.ARGS}}
    vars:
      ARGS: "{{default .PACKAGES .CLI_ARGS}}"
      
  build_info:
    desc: Generate the build info
    cmds:
      - pants run python/generate_build_info.py -- {{.ARGS}}
    vars:
      ARGS: "{{default .PACKAGES .CLI_ARGS}}"

  hermit_manifest:
    desc: Generate the hermit manifest
    cmds:
      - pants run python/generate_hermit_manifest.py -- {{.ARGS}}
    vars:
      ARGS: "{{default .PACKAGES .CLI_ARGS}}"

  hermit_index:
    desc: Generate the hermit index
    cmds:
      - hermit search --json > index.json

  hermit_index_release:
    desc: Create or update release for the hermit index
    cmds:
      - |
        if gh release view index; then
          gh release delete index --yes --cleanup-tag
        fi
      - gh release create index --title "Package index" --notes "The index reflecting the most recently merged changes to hermit-python-packages." ./index.json

  prepare:
    desc: Prepare the build
    cmds:
      - task: state
      - task: requirements
      - task: releases

  commit:
    desc: Commit changes to the repository
    cmds:
      - git add .
      - git commit -m "[skip ci] Updated Repository Files"
      - git push origin main

  finalize:
    desc: Finalize the build
    cmds:
      - task: build_info
      - task: hermit_manifest
      - task: hermit_index
      - task: commit
      - task: hermit_index_release

  all:
    desc: Run all tasks
    cmds:
      - task: prepare
      - task: build
      - task: finalize
      
  devenv:apply:
    desc: Apply the changes necessary for the development environment
    cmds:
      - op inject -i .env.tmpl -o .env
    
