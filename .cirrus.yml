container:
  image: node:latest

check_task:
  node_modules_cache:
    folder: node_modules
    fingerprint_script: cat yarn.lock
    populate_script: yarn install
  test_script: yarn test

# arm_container:
#   image: node:latest

# check_task:
#   node_modules_cache:
#     folder: node_modules
#     fingerprint_script: cat yarn.lock
#     populate_script: yarn install
#   test_script: yarn test# CirrusCI configuration for building Linux packages

env:
  GITHUB_TOKEN: ENCRYPTED[!0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef!]

# Task for Linux amd64 builds
linux_amd64_task:
  name: Linux amd64 Build
  container:
    image: ubuntu:24.04
    cpu: 4
    memory: 8G
  setup_script:
    - apt-get update
    - apt-get install -y curl git build-essential
    # Setup direnv
    - curl -sfL https://direnv.net/install.sh | bash
    - echo 'eval "$(direnv hook bash)"' >> ~/.bashrc
    - source ~/.bashrc
    - direnv allow .
  build_script:
    # Use the hermit script directly
    - ./bin/hermit install
    - eval "$(./bin/hermit env)"
    - task pex:build

# Task for Linux arm64 builds
linux_arm64_task:
  name: Linux arm64 Build
  arm_container:
    image: ubuntu:24.04
    cpu: 4
    memory: 8G
  setup_script:
    - apt-get update
    - apt-get install -y curl git build-essential
    # Setup direnv
    - curl -sfL https://direnv.net/install.sh | bash
    - echo 'eval "$(direnv hook bash)"' >> ~/.bashrc
    - source ~/.bashrc
    - direnv allow .
  build_script:
    # Use the hermit script directly
    - ./bin/hermit install
    - eval "$(./bin/hermit env)"
    - task pex:build
